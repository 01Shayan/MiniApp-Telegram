version: "3.9"

services:
  web:
    build: .
    container_name: mini_app-web
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000 --timeout 120 --workers 3
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    env_file:
      - .env
    depends_on:
      - mysql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5

  mysql:
    image: mysql:8.0
    container_name: mini_app-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:  # Optional: expose only if needed
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  cron:
    build:
      context: .
      dockerfile: Dockerfile-cron
    container_name: mini_app-cron
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - mysql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "manage.py", "check"]
      interval: 1m
      timeout: 20s
      retries: 3

  nginx:
    image: nginx:latest
    container_name: mini_app-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/static
    depends_on:
      - web
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mysql_data:
  static_volume: